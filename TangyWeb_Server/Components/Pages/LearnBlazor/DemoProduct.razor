@page "/learnblazor/demoproduct"
@rendermode InteractiveServer
@using Tangy_Models.LearnBlazorModels

<PageTitle>Demo Product</PageTitle>
<h3>Demo Product</h3>

<div class="container-fluid">
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Active</th>
                            <th>Status</th>
                            <th>Show Properties</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var product in Products)
                    {
                        <tr>
                            <td>@product.Name</td>
                            <td>$@product.Price.ToString("N2")</td>
                            <td>
                                <span class="badge @(product.IsActive ? "bg-success" : "bg-danger")">
                                    @product.IsActive
                                </span>
                            </td>
                            <td>@(product.IsActive ? "Active" : "Not Active")</td>
                            <td>
                                <input type="checkbox" @bind-value="@product.IsActive" checked="@(product.IsActive ? "checked" : null)" />
                                @if (product.IsActive)
                                {
                                    foreach (var prop in product.ProductProperties)
                                    {
                                        <p>@prop.Key - @prop.Value</p>
                                    }
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



@code {
    public List<Product> Products = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Products =
        [
            new Product
            {
                Id = 1,
                Name = "Rose Candle",
                IsActive = true,
                Price = 1500,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 1, Key = "Color", Value = "Black" },
                    new() { Id = 2, Key = "Flavor", Value = "Rose Jasmine" },
                    new() { Id = 3, Key = "Size", Value = "20oz" }
                }
            },
            new Product
            {
                Id = 2,
                Name = "Ocean Breeze Soap",
                IsActive = true,
                Price = 899,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 4, Key = "Color", Value = "Blue" },
                    new() { Id = 5, Key = "Scent", Value = "Ocean" },
                    new() { Id = 6, Key = "Weight", Value = "4oz" }
                }
            },
            new Product
            {
                Id = 3,
                Name = "Lavender Pillow",
                IsActive = false,
                Price = 2499,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 7, Key = "Color", Value = "Purple" },
                    new() { Id = 8, Key = "Material", Value = "Cotton" },
                    new() { Id = 9, Key = "Size", Value = "16x16" }
                }
            },
            new Product
            {
                Id = 4,
                Name = "Vanilla Diffuser",
                IsActive = true,
                Price = 1999,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 10, Key = "Color", Value = "White" },
                    new() { Id = 11, Key = "Scent", Value = "Vanilla" },
                    new() { Id = 12, Key = "Volume", Value = "100ml" }
                }
            }
        ];

    }
}
