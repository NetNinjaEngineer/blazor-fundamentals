@page "/learnblazor/demoproduct"
@rendermode InteractiveServer
@using Tangy_Models.LearnBlazorModels

<PageTitle>Demo Product</PageTitle>
<h3>Demo Product</h3>
<p>Favourite Count: @SelectedFavouriteCount</p>

<div class="container-fluid">
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Active</th>
                            <th>Status</th>
                            <th>Show Properties</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Products)
                        {
                            <IndividualProduct 
                                Product="product"
                                OnProductSelected="@((prod) => SelectProduct(prod))"
                                OnFavouriteUpdated="@(isFav => IncrementSelectedFavouriteCount(isFav, product))"
                                OnProductEdited="HandleProductEdit"
                                OnProductDeleted="HandleProductDelete" />
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (SelectedProduct is not null)
    {
        <div class="alert alert-success mt-3">
            <h4>Selected Product:</h4>
            <p>Name: @SelectedProduct.Name</p>
            <p>Price: $@SelectedProduct.Price.ToString("N2")</p>
            <p>Active: @SelectedProduct.IsActive</p>
        </div>
    }
    
    @if (SelectedProducts.Count > 0)
    {
        <p>Favourate count: @SelectedProducts.Count</p>
        @foreach (var selected in SelectedProducts)
        {
            <span>@selected</span>
        }
    }

</div>



@code {
    public List<Product> Products = [];
    public int SelectedFavouriteCount;
    public Product? SelectedProduct { get; set; }
    public List<int> SelectedProducts { get; set; } = [];

    public void IncrementSelectedFavouriteCount(bool isSelected, Product product)
    {
        if (isSelected)
        {
            SelectedFavouriteCount++;
            if (!SelectedProducts.Contains(product.Id))
            {
                SelectedProducts.Add(product.Id);
            }
        }
        else
        {
            SelectedFavouriteCount--;
            SelectedProducts.Remove(product.Id);
        }
    }

    public void SelectProduct(Product product)
    {
        SelectedProduct = product;
    }

    private void HandleProductEdit(Product product)
    {
        SelectedProduct = product;
        StateHasChanged();
    }

    private void HandleProductDelete(Product product)
    {
        Products.Remove(product);
        if (SelectedProduct?.Id == product.Id)
        {
            SelectedProduct = null;
        }
        StateHasChanged();
    }


    protected override void OnInitialized()
    {
        base.OnInitialized();

        Products =
        [
            new Product
            {
                Id = 1,
                Name = "Rose Candle",
                IsActive = true,
                Price = 1500,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 1, Key = "Color", Value = "Black" },
                    new() { Id = 2, Key = "Flavor", Value = "Rose Jasmine" },
                    new() { Id = 3, Key = "Size", Value = "20oz" }
                }
            },
            new Product
            {
                Id = 2,
                Name = "Ocean Breeze Soap",
                IsActive = true,
                Price = 899,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 4, Key = "Color", Value = "Blue" },
                    new() { Id = 5, Key = "Scent", Value = "Ocean" },
                    new() { Id = 6, Key = "Weight", Value = "4oz" }
                }
            },
            new Product
            {
                Id = 3,
                Name = "Lavender Pillow",
                IsActive = false,
                Price = 2499,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 7, Key = "Color", Value = "Purple" },
                    new() { Id = 8, Key = "Material", Value = "Cotton" },
                    new() { Id = 9, Key = "Size", Value = "16x16" }
                }
            },
            new Product
            {
                Id = 4,
                Name = "Vanilla Diffuser",
                IsActive = true,
                Price = 1999,
                ProductProperties = new List<ProductProp>
                {
                    new() { Id = 10, Key = "Color", Value = "White" },
                    new() { Id = 11, Key = "Scent", Value = "Vanilla" },
                    new() { Id = 12, Key = "Volume", Value = "100ml" }
                }
            }
        ];

    }
}
